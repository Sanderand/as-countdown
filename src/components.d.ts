/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AsCountdown {
    /**
    * The date to count down to
    */
    'date': Date | string | number;
    /**
    * The label to display for days
    */
    'daysLabel': string;
    /**
    * Toggle hiding days
    */
    'hideDays': boolean;
    /**
    * Toggle hiding hours
    */
    'hideHours': boolean;
    /**
    * Toggle hiding minutes
    */
    'hideMinutes': boolean;
    /**
    * Toggle hiding seconds
    */
    'hideSeconds': boolean;
    /**
    * The label to display for hours
    */
    'hoursLabel': string;
    /**
    * The label to display for minutes
    */
    'minutesLabel': string;
    /**
    * The label to display for seconds
    */
    'secondsLabel': string;
  }
}

declare global {


  interface HTMLAsCountdownElement extends Components.AsCountdown, HTMLStencilElement {}
  var HTMLAsCountdownElement: {
    prototype: HTMLAsCountdownElement;
    new (): HTMLAsCountdownElement;
  };
  interface HTMLElementTagNameMap {
    'as-countdown': HTMLAsCountdownElement;
  }
}

declare namespace LocalJSX {
  interface AsCountdown extends JSXBase.HTMLAttributes<HTMLAsCountdownElement> {
    /**
    * The date to count down to
    */
    'date'?: Date | string | number;
    /**
    * The label to display for days
    */
    'daysLabel'?: string;
    /**
    * Toggle hiding days
    */
    'hideDays'?: boolean;
    /**
    * Toggle hiding hours
    */
    'hideHours'?: boolean;
    /**
    * Toggle hiding minutes
    */
    'hideMinutes'?: boolean;
    /**
    * Toggle hiding seconds
    */
    'hideSeconds'?: boolean;
    /**
    * The label to display for hours
    */
    'hoursLabel'?: string;
    /**
    * The label to display for minutes
    */
    'minutesLabel'?: string;
    /**
    * Event emitted when countdown has finished
    */
    'onDone'?: (event: CustomEvent<null>) => void;
    /**
    * The label to display for seconds
    */
    'secondsLabel'?: string;
  }

  interface IntrinsicElements {
    'as-countdown': AsCountdown;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


